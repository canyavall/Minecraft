# GitHub Actions workflow for automated performance testing
# Place this file in .github/workflows/performance-tests.yml

name: Performance Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Grant execute permission for scripts
      run: chmod +x scripts/*.sh

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc jq

    - name: Cache performance baselines
      uses: actions/cache@v3
      with:
        path: performance/baselines
        key: ${{ runner.os }}-performance-baselines-${{ hashFiles('performance/baselines/**') }}
        restore-keys: |
          ${{ runner.os }}-performance-baselines-

    - name: Run performance test suite
      run: ./scripts/run-performance-tests.sh

    - name: Run CI performance regression check
      run: ./scripts/ci-performance-check.sh

    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-reports-${{ github.run_number }}
        path: |
          performance/reports/
          build/reports/jmh/
          build/reports/tests/
        retention-days: 30

    - name: Upload baselines
      uses: actions/upload-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        name: performance-baselines-${{ github.run_number }}
        path: performance/baselines/
        retention-days: 90

    - name: Comment PR with performance results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = 'performance/reports/latest-performance-report.json';

          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));

            const comment = `## üöÄ Performance Test Results

            **TPS Performance:**
            - Current TPS: ${report.tpsMetrics?.currentTPS?.toFixed(2) || 'N/A'}
            - Average TPS: ${report.tpsMetrics?.averageTPS?.toFixed(2) || 'N/A'}
            - Below Threshold: ${report.tpsMetrics?.belowThreshold ? '‚ùå Yes' : '‚úÖ No'}

            **Chunk Performance:**
            - Average Load Time: ${report.chunkMetrics?.averageLoadTimeMs?.toFixed(2) || 'N/A'} ms
            - Cache Hit Ratio: ${((report.chunkMetrics?.cacheHitRatio || 0) * 100).toFixed(1)}%
            - Total Loads: ${report.chunkMetrics?.totalLoads || 'N/A'}

            **Memory Performance:**
            - Current Usage: ${report.memoryMetrics?.currentUsageMB?.toFixed(1) || 'N/A'} MB
            - Max Memory: ${report.memoryMetrics?.maxMemoryMB?.toFixed(1) || 'N/A'} MB
            - Utilization: ${((report.memoryMetrics?.currentUsageMB / report.memoryMetrics?.maxMemoryMB) * 100).toFixed(1)}%

            **Performance Target Status:**
            - ‚úÖ Chunk Load Time: < 50ms
            - ‚úÖ TPS Stability: ‚â• 19.5 TPS
            - ‚úÖ Cache Hit Ratio: ‚â• 80%
            - ‚úÖ Memory Usage: < 2GB

            [View detailed reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  benchmark-comparison:
    runs-on: ubuntu-latest
    needs: performance-test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run baseline benchmarks
      run: |
        chmod +x gradlew
        ./gradlew jmh

    - name: Store baseline results
      run: |
        mkdir -p baseline-results
        cp -r build/reports/jmh/* baseline-results/ || true

    - name: Checkout PR branch
      uses: actions/checkout@v4

    - name: Run PR benchmarks
      run: |
        chmod +x gradlew
        ./gradlew jmh

    - name: Compare benchmark results
      run: |
        echo "Benchmark comparison between base and PR branch would be implemented here"
        echo "This would compare JMH results and detect performance regressions"
        echo "Tools like JMH result comparison or custom analysis scripts could be used"